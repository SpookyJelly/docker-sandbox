/* Requires the Docker Pipeline plugin */
pipeline {
    agent { docker { image 'node:18.16.0-alpine' } }
    stages {
        stage('build') {
            steps {
                sh 'node --version'
            }
        }
        stage("Build"){
            steps{
                retry(3) {
                    sh 'echo Retry'
                }
            }
        }
    }
    // testing sh step
    // agent any
    // stages {
    //     stage('Build') {
    //         steps {
    //             sh 'echo "Hello World"'
    //             sh '''
    //                 echo "Multiline shell steps works too"
    //                 ls -lah
    //             '''
    //         }
    //     }
    // }

    // testing retry (실패시 N번 재시도), timeout (시간초과시 실패처리)
    // agent any
    // stages {
    //     stage('Deploy') {
    //         steps {
    //             retry(3) {
    //                 sh 'make ./flakey-deploy.sh'
    //             }

    //             timeout(time:3, unit:'MINUTES') {
    //                 sh 'make ./health-check.sh'
    //             }
    //         }
    //     }
    // }

    // states 말고 다른 조건이 있는듯, 근데 이건 sh를 안쓴다?
    post {
        always {
            echo 'This will always run'
        }
        success {
            echo 'This will run only if successful'
        }
        failure {
            echo 'This will run only if failed'
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }
    }
}